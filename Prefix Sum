public class PrefixSum {
    public static void main(String[] args) {
        //time complexity - O(m*n)
        //space complexity - O(1)
        int [][]arr = {
                {1,1,1,1},
                {1,1,1,1},
                {1,1,1,1},
                {1,1,1,1}
        };
        //Brute force approach
        int r1 = 2;
        int c1 = 2;
        int r2 = 3;
        int c2 = 3;
      //  int sum;

     /*   for(int i=r1;i<=r2;i++){
            for(int j=c1;j<=c2;j++){
                sum+=arr[i][j];
            }
        }
        System.out.println("The sum is: "+sum);*/

        //Optimized Approach
        int m  = arr.length;
        int n = arr[0].length;

        //traversed the array calculate the row-wise prefix sum
        for(int i=0;i<m;i++){
            for(int j=1;j<n;j++){
                arr[i][j] += arr[i][j-1];
            }
        }
        //traversed the array column - wise to calculate the prefix sum
        for(int j=0;j<n;j++){
            for(int i=1;i<m;i++){
                arr[i][j] += arr[i-1][j];
            }
        }
        int sum=0,up=0,left=0,repeated_region = 0;
        sum = arr[r2][c2];
        up = arr[r1-1][c2];
        left = arr[r2][c1-1];
        repeated_region = arr[r1-1][c1-1];

        int result = sum-up-left+repeated_region;
        System.out.println(result);

    }
}
